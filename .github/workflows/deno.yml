# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: gpt-cli publisher

on:
  push:
    branches:
      - main
      - 'release/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    paths:
      - "**/*.ts"
      - ".github/workflows/deno.yml"
  pull_request:
    branches:
      - main
    paths:
      - "**/*.ts"
      - ".github/workflows/deno.yml"

permissions:
  contents: read

jobs:
  formatter:
    name: format & test
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        # uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v2.x.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      - name: Verify formatting
        run: deno fmt --check index.ts lib/*.ts test/*.ts

      - name: Run linter
        run: deno lint index.ts lib/*.ts test/*.ts

      - name: Run checker
        run: deno check index.ts lib/*.ts test/*.ts

      - name: Run tests
        run: deno test --allow-env test/*.ts

  builder:
    name: compile & publish artifact
    runs-on: ${{ matrix.vm }}
    needs: formatter
    strategy:
      matrix:
        include:
          - name: linux
            vm: ubuntu-latest
          - name: macosx
            vm: macos-latest
          - name: windows
            vm: windows-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        # uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      - name: Build binary
        run: deno compile --allow-net --allow-env --output gpt index.ts

      - name: Binary upload (Unix, MacOS)
        # Artifact upload only occurs when tag matches
        if: runner.os != 'Windows' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: gpt-cli-${{ matrix.name }}
          path: gpt

      - name: Binary upload (Windows)
        if: runner.os == 'Windows' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: gpt-cli-${{ matrix.name }}
          path: gpt.exe
